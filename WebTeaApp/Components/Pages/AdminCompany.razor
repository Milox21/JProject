@page "/company"

@using WebTeaApp.Models
@using WebTeaApp.Services

@inject ApiConnectionService<Company> ApiService

<h3 class="mt-4 mb-3 text-center">Company Management</h3>

@if (Companies == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container mt-4">
        <button class="btn btn-primary mb-3" @onclick="OpenAddCompanyModal">
            <i class="bi bi-plus-lg"></i> Add New Company
        </button>

        <div class="row">
            @foreach (var company in Companies)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card mb-3 custom-shadow">
                        <div class="card-header bg-dark text-white d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">@company.Name</h5>
                            <div class="btn-group">
                                <button class="btn btn-outline-light btn-sm" @onclick="() => EditCompany(company)" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit">
                                    <i class="bi bi-pencil"></i>
                                </button>
                                <button class="btn btn-outline-light btn-sm" @onclick="() => DeleteCompany(company.Id)" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <p><strong>Email:</strong> @company.Email</p>
                            <p><strong>Phone Number:</strong> @company.PhoneNumber</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    @if (IsAddCompanyModalOpen)
    {
        <div class="modal fade show d-block" tabindex="-1" aria-labelledby="addCompanyModalLabel" aria-hidden="true" style="background: rgba(0,0,0,.5);">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="addCompanyModalLabel">Add New Company</h5>
                        <button type="button" class="btn-close" @onclick="CloseAddCompanyModal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Name:</label>
                            <input class="form-control" @bind="NewCompany.Name" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email:</label>
                            <input type="email" class="form-control" @bind="NewCompany.Email" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Phone Number:</label>
                            <input type="text" class="form-control" @bind="NewCompany.PhoneNumber" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseAddCompanyModal">Close</button>
                        <button type="button" class="btn btn-success" @onclick="AddCompany">Add Company</button>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (SelectedCompanyId != 0)
    {
        <div class="modal fade show d-block" tabindex="-1" aria-labelledby="editCompanyModalLabel" aria-hidden="true" style="background: rgba(0,0,0,.5);">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h5 class="modal-title" id="editCompanyModalLabel">Edit Company</h5>
                        <button type="button" class="btn-close" @onclick="CancelEdit"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Name:</label>
                            <input type="text" class="form-control" @bind="Companies.FirstOrDefault(c => c.Id == SelectedCompanyId).Name" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email:</label>
                            <input type="email" class="form-control" @bind="Companies.FirstOrDefault(c => c.Id == SelectedCompanyId).Email" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Phone Number:</label>
                            <input type="text" class="form-control" @bind="Companies.FirstOrDefault(c => c.Id == SelectedCompanyId).PhoneNumber" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
                        <button type="button" class="btn btn-success" @onclick="SaveCompany">Save Changes</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

<style>
    .custom-shadow {
        box-shadow: 5px 4px 8px rgba(0, 0, 0, 1);
    }
</style>
@code {
    List<Company> Companies;
    int SelectedCompanyId;
    Company NewCompany = new Company();
    bool IsAddCompanyModalOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadCompanies();
        SelectedCompanyId = 0;
    }

    private async Task LoadCompanies()
    {
        Companies = await ApiService.GetResources("api/Company");
    }

    private void OpenAddCompanyModal()
    {
        NewCompany = new Company(); 
        IsAddCompanyModalOpen = true;
    }

    private void CloseAddCompanyModal()
    {
        IsAddCompanyModalOpen = false;
    }

    private async Task AddCompany()
    {
        await ApiService.PostResource("api/Company", NewCompany);
        await LoadCompanies();
        CloseAddCompanyModal();
    }

    private void EditCompany(Company item)
    {
        SelectedCompanyId = item.Id;
    }

    private async Task SaveCompany()
    {
        var CompanyToSave = Companies.FirstOrDefault(t => t.Id == SelectedCompanyId);
        if (CompanyToSave != null)
        {
            await ApiService.PutResource($"api/Company/{CompanyToSave.Id}", CompanyToSave);
            SelectedCompanyId = 0;
        }
        await LoadCompanies();
    }

    private async void CancelEdit()
    {
        SelectedCompanyId = 0;
        await LoadCompanies();
    }

    private async Task DeleteCompany(int itemid)
    {
        await ApiService.DeleteResource($"api/Company/{itemid}");
        await LoadCompanies();
    }
}
