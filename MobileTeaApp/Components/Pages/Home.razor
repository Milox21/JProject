@page "/"

@using MobileTeaApp.Models
@using MobileTeaApp.Services

@inject ApiConnectionService<Tea> TeaService
@inject ApiConnectionService<TeaType> TeaTypeService
@inject ApiConnectionService<PersonalShelf> PersonalShelfService
@inject AuthService AuthService;
@inject PromoCodeService PromoCodeService;


@if (teaTypes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div id="app" class="container mt-4">
        @foreach (var teaType in teaTypes)
        {
            <div class="card mb-3 custom-shadow">
                <div class="card-header bg-dark text-white">
                    <h4 class="mb-0">@teaType.Name</h4>
                </div>
                <div class="card-body">
                    <p>@teaType.Description</p>
                    @if (teaType.Teas != null && teaType.Teas.Count > 0)
                    {
                        <ul class="list-group">
                            @foreach (var tea in teaType.Teas)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@tea.Name</strong> - @CalculatePrice(tea)
                                        <br>
                                        <button class="btn btn-outline-primary p-1" @onclick="() => ToggleDescription(tea.Id)">See More</button>
                                        @if (showDescriptionId == tea.Id)
                                        {
                                            <div class="mt-2">
                                                <p>Company: @tea.Company?.Name</p>
                                                <p>Country of origin: @tea.CountryOrigin</p>
                                                <p>Size of pack: @tea.Size g</p>
                                                <p>Original Price: @tea.Price.ToString("C")</p>
                                            </div>
                                        }
                                    </div>
                                    <button class="btn btn-outline-primary" @onclick="() => AddToShelf(tea)">Add to shelf</button>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No teas available.</p>
                    }
                </div>
            </div>
        }
    </div>
}
<style>
    .custom-shadow {
        box-shadow: 5px 4px 8px rgba(0, 0, 0, 1);
    }
</style>

@code {
    private List<TeaType>? teaTypes;
    private int? showDescriptionId;

    protected override async Task OnInitializedAsync()
    {
        await LoadTeaTypes();
    }

    private async Task LoadTeaTypes()
    {
        teaTypes = await TeaTypeService.GetResources("api/TeaType/all");
    }

    private string CalculatePrice(Tea tea)
    {
        return PromoCodeService.ApplyPromoCode(tea);
    }

    private async Task AddToShelf(Tea tea)
    {
        await PersonalShelfService.PostResource("api/PersonalShelf", new PersonalShelf
            {
                ProfileId = AuthService.Id,
                TeaId = tea.Id,
                Amount = tea.Size,
                Rating = 0,
                Note = "",
                Tea = tea
            });
    }

    private void ToggleDescription(int teaId)
    {
        showDescriptionId = showDescriptionId == teaId ? (int?)null : teaId;
    }
}
